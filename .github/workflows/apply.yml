name: Build Spring Boot & Terraform Check

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:   # ðŸ‘ˆ allows manual trigger from Actions tab

jobs:
  build-and-terraform:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Verify AWS Identity
        run: aws sts get-caller-identity

      # Build Spring Boot app
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Build Docker & push to ECR
      - name: Get AWS Account ID
        id: account
        run: echo "account_id=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_OUTPUT

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker image
        env:
          AWS_ACCOUNT_ID: ${{ steps.account.outputs.account_id }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          IMAGE_REPO="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${{ secrets.ECR_REPO_NAME }}"
          IMAGE_TAG="latest"
          echo "Building image: $IMAGE_REPO:$IMAGE_TAG"
          docker build -t $IMAGE_REPO:$IMAGE_TAG .
          docker push $IMAGE_REPO:$IMAGE_TAG

      # Terraform steps
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5

      - name: Terraform init
        run: terraform -chdir=infrastructure init

      - name: Terraform fmt
        run: terraform -chdir=infrastructure fmt -check

      - name: Terraform validate
        run: terraform -chdir=infrastructure validate

      - name: Terraform plan
        run: terraform -chdir=infrastructure plan

      - name: Terraform apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform -chdir=infrastructure apply -auto-approve
